language: python
notifications:
  email:
    on_success: change
    on_failure: change

# gives us a more up-to-date glibc (required by tensorflow)
sudo: required
dist: trusty

env:
  global:
    - STATIC="false"

  matrix:
    - CONDA_DEPS="numpy==1.11"
      PYTHON_VERSION="3.5"
      PRECISION="64"
    - CONDA_DEPS="numpy"
      PYTHON_VERSION="3.5"
      PRECISION="64"
    - CONDA_DEPS="numpy"
      PYTHON_VERSION="3.4"
      PRECISION="64"
    - CONDA_DEPS="numpy"
      PYTHON_VERSION="3.5"
      PRECISION="32"
    - CONDA_DEPS="numpy"
      PYTHON_VERSION="3.5"
      PRECISION="64"
      STATIC="true"

# Setup Miniconda
before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n test python=$PYTHON_VERSION pip $CONDA_DEPS
  - source activate test

# install requirements that weren't installed in CONDA_DEPS
install:
  - pip install -r requirements.txt
  - pip install -r requirements-test.txt

# run pytest/flake8
script:
  - if [[ "$STATIC" == "false" ]]; then
      python setup.py develop;
      py.test --pyargs nengo --simulator nengo_deeplearning.tests.Simulator$PRECISION --ref-simulator nengo_deeplearning.tests.Simulator$PRECISION -p nengo.tests.options;
    else
      flake8;
    fi