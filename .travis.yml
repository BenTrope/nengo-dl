language: minimal
notifications:
  email:
    on_success: change
    on_failure: change
cache:
  directories:
  - $HOME/miniconda

dist: trusty

env:
  global:
    - PYTHON_VERSION="3.6"
    - PIP_UPGRADE="true"  # always upgrade to latest version
    - PIP_UPGRADE_STRATEGY="eager"  # upgrade all dependencies
    - TEST_ARGS=""
    - COVERAGE="False"
    - NUMPY_VERSION="numpy"
    - TF_VERSION="tensorflow"
    - NENGO_VERSION="nengo"

jobs:
  include:
  - env:
      SCRIPT="static"
    stage: test
  - env:
      SCRIPT="docs"
  - env:
      SCRIPT="test"
    cache: false
  - env:
      NENGO_VERSION="git+https://github.com/nengo/nengo.git"
      TF_VERSION="tensorflow<2.0 --pre"
      SCRIPT="test"
      COVERAGE="True"
  - env:
      NENGO_VERSION="nengo==2.7.0"
      TF_VERSION="tensorflow==1.4.0"
      PIP_UPGRADE_STRATEGY="only-if-needed"
      SCRIPT="test"
      PYTHON_VERSION="3.4"
      COVERAGE="True"
  - env:
      SCRIPT="test"
      TEST_ARGS="--dtype float64 --simulator-only"
  - env:
      SCRIPT="test"
      TEST_ARGS="--unroll_simulation 5 --simulator-only"
  - env:
      SCRIPT="test"
      TEST_ARGS="--inference-only --simulator-only"
  - env:
      SCRIPT="examples"
    language: generic

# set up miniconda
before_install:
  - export PATH="$HOME/miniconda/bin:$PATH"
  - if ! [[ -d $HOME/miniconda/envs/test ]]; then
      rm -rf $HOME/miniconda;
      wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      conda create -q -y -n test python=$PYTHON_VERSION pip;
    fi
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - pip install git+https://github.com/nengo/nengo-bones.git@template-ci
  - generate-bones --output-dir .ci ci-scripts
  - chmod +x .ci/*.sh

# install python requirements
install:
  - source activate test
  - pip install pip
  - .ci/$SCRIPT.sh install
  - conda list -e
  - pip freeze

before_script:
  - .ci/$SCRIPT.sh before_script

script:
  - .ci/$SCRIPT.sh script

before_cache:
  - conda clean --all

after_success:
  - .ci/$SCRIPT.sh after_success
